---
title: "Final Project Title"
author: "Kevin Sanford, Maile Kamada, and Harshaan Sall"
date: "12-6-2024"
format:
  html:
    toc: true
    toc-location: left
    embed-resources: true
    code-line-numbers: true
  pdf:
    code-line-numbers: true
editor: visual
---

## Introduction

We intend to use linear regression techniques to approach the exercise in the Kaggle competition found at [https://www.kaggle.com/competitions/house-prices-advanced-regression-techniques](https://www.kaggle.com/competitions/house-prices-advanced-regression-techniques/data). The exercise provides a large data sets that describes houses in Ames, Iowa with 79 parameters. The goal of the exercise is to create an algorithm that predicts the selling price of homes based on the parameters. The data provided consists of two data sets: test.csv and train.csv. The training data set includes housing prices to facilitate the creation of a linear regression model that predicts sale prices of homes, which can then be tested on the test data set. We begin by importing the data sets and previewing them.

```{r}
# check out data structure
housing_data.train <- read.csv("train.csv")
housing_data.test <- read.csv("test.csv")
head(housing_data.train)
head(housing_data.test)
```


We also want to know the dimensions and summary of the data sets.


```{r}
dim(housing_data.test)
dim(housing_data.train)

summary(housing_data.train)
```

Next, we look at some plots of the data.

```{r}
# some numerical plots
plot(housing_data.train$YearBuilt,
     housing_data.train$SalePrice,
     xlab = "Year Built",
     ylab = "Sale Price")
plot(housing_data.train$LotArea,
     housing_data.train$SalePrice,
     xlab = "Lot Area",
     ylab = "Sale Price")
plot(housing_data.train$LotArea[housing_data.train$LotArea < 50000],
     housing_data.train$SalePrice[housing_data.train$LotArea < 50000],
     xlab = "Lot Area",
     ylab = "Sale Price")
plot(housing_data.train$LotFrontage,
     housing_data.train$SalePrice,
     xlab = "Lot Frontage",
     ylab = "Sale Price")
plot(housing_data.train$GrLivArea,
     housing_data.train$SalePrice,
     xlab = "Living Area Square Feet",
     ylab = "Sale Price")
```

These plots show some positive correlation, suggesting that several factors are important for the cost of a home in Ames. Now we look at some categorical factors that may also affect the cost.

```{r}
#explore categorical fields
plot(factor(housing_data.train$Neighborhood),
     housing_data.train$SalePrice,
     xlab = "Neighborhood",
     ylab = "Sale Price")
plot(factor(housing_data.train$Street),
     housing_data.train$SalePrice,
     xlab = "Type of Street",
     ylab = "Sale Price")
plot(factor(housing_data.train$Heating),
     housing_data.train$SalePrice,
     xlab = "Heating Type",
     ylab = "Sale Price")
plot(factor(housing_data.train$BldgType),
     housing_data.train$SalePrice,
     xlab = "Building Type",
     ylab = "Sale Price")
```

Check to ensure the Sale Price has normal distribution

```{r}
#view Q-Q plot to check if Sale Price has a normal distribution
qqnorm(housing_data.train$SalePrice)
qqline(housing_data.train$SalePrice)
```

Apply log function to ensure normal dist

```{r}
#apply log to the sale price like in the source paper to ensure normal dist
qqnorm(log(housing_data.train$SalePrice))
qqline(log(housing_data.train$SalePrice))
```

Use T test to see which variables are significant

```{r}
# check to make sure certain variables are significant
t.test (log(housing_data.train$SalePrice[housing_data.train$Neighborhood == 'NAmes']))
t.test (log(housing_data.train$SalePrice[housing_data.train$Neighborhood == 'CollgCr']))
t.test (log(housing_data.train$SalePrice[housing_data.train$Neighborhood == 'OldTown']))
t.test (log(housing_data.train$SalePrice[housing_data.train$Neighborhood == 'Edwards']))
t.test (log(housing_data.train$SalePrice[housing_data.train$LotArea < 50000]))

```

Apply lm to lot area

```{r}
#apply lm to lot area 
housing.lm <- lm(log(housing_data.train$SalePrice) ~  housing_data.train$LotArea ,data=housing_data.train)

housing.lm
plot(housing.lm)
```

We an see that the Residuals vs fitted is not straight, try to remove outliers

```{r}
#remove outliers
housing_data.train.noout <- housing_data.train[housing_data.train$LotArea < 10000,]

housing.lm.2 <- lm(log(housing_data.train$SalePrice) ~  housing_data.train$LotArea ,data=housing_data.train.noout)

housing.lm.2
plot(housing.lm.2)
```

Try adding in another feature

```{r}
#add another significant feature to improve model
housing.lm.3 <- lm(log(housing_data.train.noout$SalePrice) ~ + housing_data.train.noout$LotArea + housing_data.train.noout$Neighborhood,
                   data = housing_data.train.noout)
housing.lm.3
plot(housing.lm.3)
```

```{r}
#view details of lm and predict sale price using the lm
summary(housing.lm.3)
housing_predict <- predict.lm(housing.lm.3)
```

```{r}
#see what the correlation is between the prediction and actuals
cor(housing_data.train.noout$SalePrice,housing_predict)

```

```{r}
plot(housing_data.train.noout$SalePrice,exp(housing_predict))
```
